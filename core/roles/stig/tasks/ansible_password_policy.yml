- name: Add auth pam_faillock preauth even_deny_root before pam_unix.so
  pamd:
    name: "{{ item }}"
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: required
    new_module_path: pam_faillock.so
    module_arguments: 'preauth
        silent
        even_deny_root'
    state: before
  loop:
    - system-auth
    - password-auth
  

- name: Add even_deny_root argument to auth pam_faillock preauth
  pamd:
    name: "{{ item }}"
    type: auth
    control: required
    module_path: pam_faillock.so
    module_arguments: 'preauth
        silent
        even_deny_root'
    state: args_present
  loop:
    - system-auth
    - password-auth
  

- name: Add auth pam_faillock authfail even_deny_root after pam_unix.so
  pamd:
    name: "{{ item }}"
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: '[default=die]'
    new_module_path: pam_faillock.so
    module_arguments: 'authfail
        even_deny_root'
    state: after
  loop:
    - system-auth
    - password-auth
  

- name: Add even_deny_root argument to auth pam_faillock authfail
  pamd:
    name: "{{ item }}"
    type: auth
    control: '[default=die]'
    module_path: pam_faillock.so
    module_arguments: 'authfail
        even_deny_root'
    state: args_present
  loop:
    - system-auth
    - password-auth
  

- name: Add account pam_faillock before pam_unix.so
  pamd:
    name: "{{ item }}"
    type: account
    control: required
    module_path: pam_unix.so
    new_type: account
    new_control: required
    new_module_path: pam_faillock.so
    state: before
  loop:
    - system-auth
    - password-auth
    
- name: XCCDF Value var_accounts_passwords_pam_faillock_unlock_time # promote to variable
  set_fact:
    var_accounts_passwords_pam_faillock_unlock_time: !!str never

- name: Add auth pam_faillock preauth unlock_time before pam_unix.so
  pamd:
    name: "{{ item }}"
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: required
    new_module_path: pam_faillock.so
    module_arguments: 'preauth
        silent
        unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}'
    state: before
  loop:
    - system-auth
    - password-auth      

- name: Add unlock_time argument to pam_faillock preauth
  pamd:
    name: "{{ item }}"
    type: auth
    control: required
    module_path: pam_faillock.so
    module_arguments: 'preauth
        silent
        unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}'
    state: args_present
  loop:
    - system-auth
    - password-auth      

- name: Add auth pam_faillock authfail unlock_interval after pam_unix.so
  pamd:
    name: "{{ item }}"
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: '[default=die]'
    new_module_path: pam_faillock.so
    module_arguments: 'authfail
        unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}'
    state: after
  loop:
    - system-auth
    - password-auth

- name: Add unlock_time argument to auth pam_faillock authfail
  pamd:
    name: "{{ item }}"
    type: auth
    control: '[default=die]'
    module_path: pam_faillock.so
    module_arguments: 'authfail
        unlock_time={{ var_accounts_passwords_pam_faillock_unlock_time }}'
    state: args_present
  loop:
    - system-auth
    - password-auth      

- name: Add account pam_faillock before pam_unix.so
  pamd:
    name: "{{ item }}"
    type: account
    control: required
    module_path: pam_unix.so
    new_type: account
    new_control: required
    new_module_path: pam_faillock.so
    state: before
  loop:
    - system-auth
    - password-auth

- name: XCCDF Value var_password_pam_unix_remember # promote to variable
  set_fact:
    var_password_pam_unix_remember: !!str 5

- name: "Do not allow users to reuse recent passwords - system-auth (change)"
  replace:
    dest: /etc/pam.d/system-auth
    follow: yes
    regexp: '^(password\s+sufficient\s+pam_unix\.so\s.*remember\s*=\s*)(\S+)(.*)$'
    replace: '\g<1>{{ var_password_pam_unix_remember }}\g<3>'      

- name: "Do not allow users to reuse recent passwords - system-auth (add)"
  replace:
    dest: /etc/pam.d/system-auth
    follow: yes
    regexp: '^password\s+sufficient\s+pam_unix\.so\s(?!.*remember\s*=\s*).*$'
    replace: '\g<0> remember={{ var_password_pam_unix_remember }}'

- name: XCCDF Value var_accounts_passwords_pam_faillock_fail_interval # promote to variable
  set_fact:
    var_accounts_passwords_pam_faillock_fail_interval: !!str 900

- name: Add auth pam_faillock preauth fail_interval before pam_unix.so
  pamd:
    name: "{{ item }}"
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: required
    new_module_path: pam_faillock.so
    module_arguments: 'preauth
        silent
        fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval }}'
    state: before
  loop:
    - system-auth
    - password-auth      

- name: Add fail_interval argument to auth pam_faillock preauth
  pamd:
    name: "{{ item }}"
    type: auth
    control: required
    module_path: pam_faillock.so
    module_arguments: 'preauth
        silent
        fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval }}'
    state: args_present
  loop:
    - system-auth
    - password-auth      

- name: Add auth pam_faillock aufthfail fail_interval after pam_unix.so
  pamd:
    name: "{{ item }}"
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: '[default=die]'
    new_module_path: pam_faillock.so
    module_arguments: 'authfail
        fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval }}'
    state: after
  loop:
    - system-auth
    - password-auth      

- name: Add fail_interval argument to auth pam_faillock authfail
  pamd:
    name: "{{ item }}"
    type: auth
    control: '[default=die]'
    module_path: pam_faillock.so
    module_arguments: 'authfail
        fail_interval={{ var_accounts_passwords_pam_faillock_fail_interval }}'
    state: args_present
  loop:
    - system-auth
    - password-auth      

- name: Add account pam_faillock before pam_unix.so
  pamd:
    name: "{{ item }}"
    type: account
    control: required
    module_path: pam_unix.so
    new_type: account
    new_control: required
    new_module_path: pam_faillock.so
    state: before
  loop:
    - system-auth
    - password-auth
    
- name: XCCDF Value var_accounts_passwords_pam_faillock_deny # promote to variable
  set_fact:
    var_accounts_passwords_pam_faillock_deny: !!str 3

- name: Add auth pam_faillock preauth deny before pam_unix.so
  pamd:
    name: "{{ item }}"
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: required
    new_module_path: pam_faillock.so
    module_arguments: 'preauth
        silent
        deny={{ var_accounts_passwords_pam_faillock_deny }}'
    state: before
  loop:
    - system-auth
    - password-auth      

- name: Add deny argument to auth pam_faillock preauth
  pamd:
    name: "{{ item }}"
    type: auth
    control: required
    module_path: pam_faillock.so
    module_arguments: 'preauth
        silent
        deny={{ var_accounts_passwords_pam_faillock_deny }}'
    state: args_present
  loop:
    - system-auth
    - password-auth      

- name: Add auth pam_faillock authfail deny after pam_unix.so
  pamd:
    name: "{{ item }}"
    type: auth
    control: sufficient
    module_path: pam_unix.so
    new_type: auth
    new_control: '[default=die]'
    new_module_path: pam_faillock.so
    module_arguments: 'authfail
        deny={{ var_accounts_passwords_pam_faillock_deny }}'
    state: after
  loop:
    - system-auth
    - password-auth      

- name: Add deny argument to auth pam_faillock authfail
  pamd:
    name: "{{ item }}"
    type: auth
    new_type: auth
    control: '[default=die]'
    module_path: pam_faillock.so
    module_arguments: 'authfail
        deny={{ var_accounts_passwords_pam_faillock_deny }}'
    state: args_present
  loop:
    - system-auth
    - password-auth      

- name: Add account pam_faillock before pam_unix.so
  pamd:
    name: "{{ item }}"
    type: account
    control: required
    module_path: pam_unix.so
    new_type: account
    new_control: required
    new_module_path: pam_faillock.so
    state: before
  loop:
    - system-auth
    - password-auth

- name: Replace login.defs
  copy:
    src: files/account/login.defs
    dest: /etc/login.defs
    owner: root
    group: root
    mode: 0644
    backup: yes

- name: Replace useradd
  copy:
    src: files/account/useradd
    dest: /etc/default/useradd
    owner: root
    group: root
    mode: 0644
    backup: yes

- name: Replace pwquality.conf
  copy:
    src: files/account/pwquality.conf
    dest: /etc/security/pwquality.conf
    owner: root
    group: root
    mode: 0644
    backup: yes

- name: Replace system-auth-ac
  copy:
    src: files/account/system-auth-ac
    dest: /etc/pam.d/system-auth-ac
    owner: root
    group: root
    mode: 0644
    backup: yes

- name: Replace system-auth-ac
  copy:
    src: files/account/system-auth-ac
    dest: /etc/pam.d/system-auth-ac
    owner: root
    group: root
    mode: 0644
    backup: yes

- name: Replace password-auth-ac
  copy:
    src: files/account/password-auth-ac
    dest: /etc/pam.d/password-auth-ac
    owner: root
    group: root
    mode: 0644
    backup: yes